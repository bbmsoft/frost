[package]
name = "frost"
version = "0.1.0"
authors = ["Michael Bachmann <mbachmann@bbmsoft.net>"]
edition = "2018"
description = "A weather forecast web app focused on warning users about low temperatures."
repository = "https://github.com/bbmsoft/frost.git"
license = "MIT OR Apache-2.0"
keywords = ["weather", "webapp"]
homepage = "https://frost.bbmsoft.net/"

[badges]
travis-ci = { repository = "https://github.com/bbmsoft/frost.git", branch = "master" }
maintenance = { status = "actively-developed" }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]

# brtsky = "0.1"
brtsky = { path = "../brtsky" }

wasm-bindgen = { version = "0.2", features = ["nightly"] }
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = ["Geolocation", "Navigator", "Window", "console"] }
js-sys = "0.3"
chrono = { version = "0.4", features = ["wasmbind", "serde"] }
reqwest = { version = "0.10", features = ["blocking"] }
yew = "0.17"
rocket = "0.4"
anyhow = "1.0"
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
dotenv = "0.15"
http = "0.2"
log = "0.4"
env_logger = "0.8"
wasm-logger = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
